  version: '3.8'

  networks:
    kafka-net:
      driver: bridge


  services:
    syslog:
      image: rsyslog:v1
      container_name: syslog
      ports:
        - "5140:5140"
      networks:
        kafka-net:

    zookeeper:
      image: confluentinc/cp-zookeeper:latest
      container_name: zookeeper
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
      networks:
        kafka-net:

    kafka:
      image: confluentinc/cp-kafka:latest
      hostname: kafka
      container_name: kafka
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      networks:
        kafka-net:


    kafka-connect:
      image: confluentinc/cp-kafka-connect:5.4.9
      container_name: kafka-connect
      ports:
        - '8083:8083'
      depends_on:
        - zookeeper
        - kafka
        - elasticsearch
      volumes:
        - $PWD/connect-plugins:/connect-plugins
      environment:
        CONNECT_BOOTSTRAP_SERVERS: kafka:9092
        CONNECT_REST_PORT: 8083
        CONNECT_GROUP_ID: 'connect'
        CONNECT_CONFIG_STORAGE_TOPIC: connect-config
        CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
        CONNECT_STATUS_STORAGE_TOPIC: connect-status
        CONNECT_REPLICATION_FACTOR: 1
        CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
        CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
        CONNECT_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
        CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
        CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
        CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
        CONNECT_PRODUCER_INTERCEPTOR_CLASSES: 'io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor'
        CONNECT_CONSUMER_INTERCEPTOR_CLASSES: 'io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor'
        CONNECT_REST_ADVERTISED_HOST_NAME: 'connect'
        CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
        CONNECT_PLUGIN_PATH: /connect-plugins/confluentinc-kafka-connect-elasticsearch-14.1.1/lib,/usr/share/java
        CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
        CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
        CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-3.3.0.jar
      networks:
        kafka-net:

    elasticsearch:
      container_name: elastic
      image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
      ports:
        - '9200:9200'
        - '9300:9300'
      environment:
        - xpack.security.enabled=false
        - discovery.type=single-node
        - bootstrap.memory_lock=true
        - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        - cluster.routing.allocation.disk.threshold_enabled=false
      ulimits:
        memlock:
          soft: -1
          hard: -1

    kibana:
      container_name: kibana
      image: docker.elastic.co/kibana/kibana:7.10.2
      ports:
        - '5601 :5601'
      depends_on:
        - elasticsearch
      environment:
        SERVER_NAME: kibana.example.org
        ELASTICSEARCH_HOSTS: '["http://elastic:9200"]'